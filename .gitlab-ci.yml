image: ghcr.io/ledgerhq/ledger-app-builder/ledger-app-builder:latest

stages:
  - test          # List of stages for jobs, and their order of execution
  - build-docker
  - build-firmware

services:
  - docker:dind

variables:
  LEDGER_BUILDER_IMAGE: registry.gitlab.com/accumulatenetwork/ledger/app-accumulate
  APP_VERSION: "1.0.2"
  BOLD_RED: '\e[1;31m'
  NO_COLOR: '\e[0m'
  SECTION: '\e[0K'

.rules all:
  rules:
  - if: $CI_PIPELINE_SOURCE != ''

lint:
  stage: test
  before_script:
    - function die { echo -e "${BOLD_RED}${1}${NO_COLOR}"; false; }
  script:
    - echo -e "${SECTION}section_start:`date +%s`:generate\r${SECTION}Verify code is correctly formatted"
    - find src/ -type f \( -name "*.h" -o -name "*.c" \) -exec clang-format -i {} \;
    - git diff --quiet || die "[Error] Please run clang-format on the following files: \n$(git ls-files -m)"
    - echo -e "${SECTION}section_end:`date +%s`:generate\r${SECTION}"

build docker image:
  stage: build-docker
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build -t ${LEDGER_BUILDER_IMAGE} .
    - docker push ${LEDGER_BUILDER_IMAGE}

build-nano-s:
  stage: build-firmware
  variables:
    BOLOS_SDK: /opt/nanos-secure-sdk
    OUTPUT_PKG_NAME: app-accumulate-nano-s
    PACKAGE_REGISTRY_URL: "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/nano-s"
  script:
    - docker run --rm -e BOLOS_SDK="${BOLOS_SDK}" -e OUTPUT_PKG_NAME="${OUTPUT_PKG_NAME}" -e CI_JOB_TOKEN="${CI_JOB_TOKEN}" -e APP_VERSION="${APP_VERSION}" -e PACKAGE_REGISTRY_URL=${PACKAGE_REGISTRY_URL} ${LEDGER_BUILDER_IMAGE}

build-nano-splus:
  stage: build-firmware
  variables:
    BOLOS_SDK: /opt/nanosplus-secure-sdk
    OUTPUT_PKG_NAME: app-accumulate-nano-splus
    PACKAGE_REGISTRY_URL: "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/nano-splus"
  script:
    - docker run --rm -e BOLOS_SDK="${BOLOS_SDK}" -e OUTPUT_PKG_NAME="${OUTPUT_PKG_NAME}" -e CI_JOB_TOKEN="${CI_JOB_TOKEN}" -e APP_VERSION="${APP_VERSION}" -e PACKAGE_REGISTRY_URL=${PACKAGE_REGISTRY_URL} ${LEDGER_BUILDER_IMAGE}

build-nano-x:
  stage: build-firmware
  variables:
    BOLOS_SDK: /opt/nanox-secure-sdk
    OUTPUT_PKG_NAME: app-accumulate-nano-x
    PACKAGE_REGISTRY_URL: "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/nano-x"
  script:
    - docker run --rm -e BOLOS_SDK="${BOLOS_SDK}" -e OUTPUT_PKG_NAME="${OUTPUT_PKG_NAME}" -e CI_JOB_TOKEN="${CI_JOB_TOKEN}" -e APP_VERSION="${APP_VERSION}" -e PACKAGE_REGISTRY_URL=${PACKAGE_REGISTRY_URL} ${LEDGER_BUILDER_IMAGE}
